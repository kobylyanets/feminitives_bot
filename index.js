require('dotenv').config();

const Telegraf = require('telegraf');

// For local debug
const ProxyAgent = require('proxy-agent');

const proxyUri = `${process.env.PROXY_PROTOCOL}://${process.env.PROXY_LOGIN}:${
  process.env.PROXY_PSSWD
  }@${process.env.PROXY_HOST}:${process.env.PROXY_PORT}`;
const proxyAgent = new ProxyAgent(proxyUri);

const lib = require('./lib/feminitives');
const make_feminitives = lib.make_feminitives;
const FEM = lib.FEM;

const bot = new Telegraf(process.env.BOT_TOKEN, {
  telegram: {
    agent: proxyAgent,
  }
});
bot.start((ctx) => ctx.replyWithMarkdown(`
–ü—Ä–∏ –ø–æ–º–æ—â–∏ —ç—Ç–æ–π –Ω–µ–±–æ–ª—å—à–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã,
—Ä–µ–∞–ª–∏–∑—É—é—â–µ–π —Ñ–µ–º–∏–Ω–∏—Å—Ç–∏—á–µ—Å–∫—É—é –ª–æ–≥–∏–∫—É, 
–≤—ã —Å–∞–º–∏ –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Ñ–µ–º–∏–Ω–∏—Ç–∏–≤—ã –∫ –ª—é–±–æ–º—É —Å–ª–æ–≤—É.
–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: –∞–≤—Ç–æ—Ä, –≤—Ä–∞—á.
`));
bot.help((ctx) => ctx.reply(`
–§–ï–ú–ò–ù–ò–¢–ò–í–´ ‚Äì —ç—Ç–æ —Å–ª–æ–≤–∞ –∂–µ–Ω—Å–∫–æ–≥–æ —Ä–æ–¥–∞, 
–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏–ª–∏ –ø–∞—Ä–Ω—ã–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–º –ø–æ–Ω—è—Ç–∏—è–º –º—É–∂—Å–∫–æ–≥–æ —Ä–æ–¥–∞, 
–æ—Ç–Ω–æ—Å—è—â–∏–º—Å—è –∫–æ –≤—Å–µ–º –ª—é–¥—è–º –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∏—Ö –ø–æ–ª–∞.`
));
bot.on('sticker', (ctx) => ctx.reply('üëç'));
bot.on('text', (ctx) => {
  const input = ctx.message && ctx.message.text;
  const word = input.trim().toLowerCase().replace(/<\/?[^>]+(>|$)/g, "").split(" ")[0];
  if (!word) {
    ctx.reply('–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ!');
    return;
  }
  let feminitives = [];
  if (FEM.exceptions.contains(word)) {
    feminitives = FEM.exceptions.feminitives(word);
  } else {
    feminitives = make_feminitives(word);
  }
  const result = (feminitives && feminitives[1] && feminitives[1].join && feminitives[1].join(" | "))
    || "–≠—Ç–æ —Å–ª–æ–≤–æ –∏ —Ç–∞–∫ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ. –û—Å—Ç–∞–≤–∏–º –µ–≥–æ –∫–∞–∫ –µ—Å—Ç—å.";
  ctx.reply(result);
});
bot.launch();
